# Default values for circleci-runner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of runners to have ready at any given time
desiredReplicas: 1

# Maximum number of runners to ever provision, even with jobs in queue
maxReplicas: 10

# You can extend a custom image from our runner and use
# that repository instead. See:
# https://circleci.com/docs/2.0/runner-installation/?section=executors-and-images#create-a-dockerfile-that-extends-the-circleci-runner-image
image:
  repository: circleci/runner
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "launch-agent"

# Refers to the resource class you created for your runner. See:
# https://circleci.com/docs/2.0/runner-installation/?section=executors-and-images#authentication
resourceClass: ""
# Runner API token. See:
# https://circleci.com/docs/2.0/runner-installation/
runnerToken: ""

##################
# RUNNER OPTIONS #
##################
# Options to pass to runner container.
# See: https://circleci.com/docs/2.0/runner-installation/?section=executors-and-images#configuration-file-reference

# Override the maximum running time. Default: 5h
maxRunTime: ""
# Don't clean up the working directory after each run. Default: false
noCleanup: false
# Complete the job, then shut down container. Default behavior is to persist and continue processing jobs.
singleTask: true
# Override working directory. Default: /opt/circleci/workdir/%s
workingDirectory: ""

################
# OTHER VALUES #
################
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
